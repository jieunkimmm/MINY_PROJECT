<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.spring</groupId>
	<artifactId>board</artifactId>
	<name>noticeBoard</name>
	<packaging>war</packaging>
	<version>1.0.0-BUILD-SNAPSHOT</version>
	<properties>
      <java-version>1.8</java-version> <!-- 수정 -->
      <org.springframework-version>5.0.7.RELEASE</org.springframework-version> <!-- 수정 -->
      <org.aspectj-version>1.6.10</org.aspectj-version>
      <org.slf4j-version>1.6.6</org.slf4j-version>
      <!-- Tiles 관련 추가 -->
      <org.apache.tiles-version>3.0.8</org.apache.tiles-version>
   </properties>
   <!-- Oracle(변경된 부분:2017.06.12 현재) -->
   <!-- 다운로드 받기 위한 사이트 설정. 스프링프레임웤에서 기본적으로 제공해주는 것이 아니기 때문에 별도로 설정해준다. -->
   <!-- db연결? -->
   <!-- 아니면 외부 라이브러리 연결 해도 됨. ojdbc처럼 -->
   <repositories>
   		<repository>
   			<id>oracle</id>
   			<url>http://maven.jahia.org/maven2</url>
   		</repository>
   </repositories>
   	
	
	<dependencies>
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				 </exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
				
		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>	
		
		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.15</version>
			<exclusions>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
			<scope>runtime</scope>
		</dependency>

		<!-- @Inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
            
      <!-- Servlet 서블릿 버전이 2.5.0에서 3.5.0 버전으로 바뀜-->
      <!-- 오라클 다운받기 위한 디펜전시 버전? -->
      <!-- <dependency>
         <groupId>javax.servlet</groupId>
         <artifactId>servlet-api</artifactId>
         <version>2.5</version>
         <scope>provided</scope>
      </dependency> -->
      <dependency> <!-- 추가편집 시작 -->
         <groupId>javax.servlet</groupId>
         <artifactId>javax.servlet-api</artifactId> <!-- 수정됨 -->
         <version>3.1.0</version> <!-- 수정 -->
         <scope>provided</scope>
      </dependency> <!-- 추가편집 끝 -->
      <dependency>
         <groupId>javax.servlet.jsp</groupId>
         <artifactId>jsp-api</artifactId>
         <version>2.1</version>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>javax.servlet</groupId>
         <artifactId>jstl</artifactId>
         <version>1.2</version>
      </dependency>
	
		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.7</version>
			<scope>test</scope>
		</dependency>        
		
		
      
      <!-- myBatis(추가)시작 2017.06.20 -->
      <dependency>
      	<groupId>org.mybatis</groupId>
      	<artifactId>mybatis</artifactId>
      	<version>3.4.6</version>
      </dependency>
      <!-- mybatis-spring -->
      <dependency>
      	<groupId>org.mybatis</groupId>
      	<artifactId>mybatis-spring</artifactId>
      	<version>1.3.2</version>
      </dependency>
      <!-- myBatis(추가)끝 -->
      
      <!-- spring-jdbc 스프링 프레임웍에서 database 연결을 위한 설정-->
      <dependency>
      	<groupId>org.springframework</groupId>
      	<artifactId>spring-jdbc</artifactId>
      	<version>${org.springframework-version}</version>
      </dependency>      
      
      <!-- commons-dbcp 커넥션풀을 위한 설정 : jsp에서 했었음! 아파치에서 제공하는 톰 어쩌구-->
      <!--커넥션풀을 위한 설정 : 다른 방법도 있었다(교재) 히카리시피? hikariCP -->
        <dependency>
      		<groupId>commons-dbcp</groupId>
      		<artifactId>commons-dbcp</artifactId>
      		<version>1.4</version>
        </dependency>      
      
		<!-- 커넥션 풀 설정(hikariCP) 시작 -->
		<!-- https://mvnrepository.com/artifact/com.zaxxer/HikariCP
		<dependency>
			<groupId>com.zaxxer</groupId>
		   	<artifactId>HikariC</artifactId>
		   	<version>2.7.4</version>
		</dependency> -->
		<!-- 컨넥션 풀 설정(HikariCP) 끝 -->
      
      
		<!-- 다운로드 할 항목에 대한 설정 -->
		<!-- Oracle(변경된 부분:2017.06.12 현재) -->
		<dependency>
			<groupId>com.oracle</groupId>
		 	<artifactId>ojdbc6</artifactId>
			<version>12.1.0.2</version>
		</dependency>		
		
		<!-- File upload 시작 -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.4</version>
		</dependency>  
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency>  
		<!-- File upload 끝 --> 
		
		<!-- Ajax 사용을 위해 필요한 항목 -->		
		<!-- Jackson JSON Mapper 시작 -->
		<!-- jackson-core springframework 5.X.X에 사용 -->
		<dependency>
	   		<groupId>com.fasterxml.jackson.core</groupId>
	   		<artifactId>jackson-databind</artifactId>
			<version>2.9.10.3</version>
		</dependency>
		<!-- Jackson JSON Mapper 끝 -->
		
		<!-- json-simple -->
		<!-- JSON데이터를 처리하기 위한 라이브러리로 JSONObject등을 제공 -->
	  	<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1</version>
	  	</dependency>  
	  	
		<!-- Tiles Framework 관련 --> 
		<dependency> 
			<groupId>org.apache.tiles</groupId> 
			<artifactId>tiles-servlet</artifactId> 
			<version>${org.apache.tiles-version}</version> 
		</dependency> 
		
		<dependency> 
			<groupId>org.apache.tiles</groupId> 
			<artifactId>tiles-api</artifactId> 
			<version>${org.apache.tiles-version}</version> 
		</dependency> 
		
		<dependency> 
			<groupId>org.apache.tiles</groupId> 
			<artifactId>tiles-jsp</artifactId> 
			<version>${org.apache.tiles-version}</version> 
		</dependency> 
		
		<dependency> 
			<groupId>org.apache.tiles</groupId> 
			<artifactId>tiles-core</artifactId> 
			<version>${org.apache.tiles-version}</version> 
		</dependency> 
		
		<dependency> 
			<groupId>org.apache.tiles</groupId> 
			<artifactId>tiles-template</artifactId> 
			<version>${org.apache.tiles-version}</version> 
		</dependency> 
		<!-- Tiles Framework 관련 -->
		
		<!-- 이메일 보내는 폼 https://mvnrepository.com/artifact/javax.mail/mail -->
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.5.0-b01</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		<!-- 이메일 인증 끝 -->
		
		<!-- naver 로그인 -->
		<dependency>
			<groupId>com.github.scribejava</groupId>
			<artifactId>scribejava-core</artifactId>
			<version>2.8.1</version>
		</dependency>
		
		<!-- 제이슨 파싱 -->
		<dependency>
		<groupId>com.googlecode.json-simple</groupId>
		<artifactId>json-simple</artifactId>
		<version>1.1.1</version>
		</dependency>
		
		<!-- httpClient를 사용하기 위해 아파치 의존 추가 -->
		<dependency>
		<groupId>org.apache.httpcomponents</groupId>
		<artifactId>httpclient</artifactId>
		<version>4.5.9</version>
		</dependency>

		<!-- Web Socket 기능 추가 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-websocket</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>     
		
		<!-- Provided Websocket API, because tomcat has its own implementation -->
		<dependency>
			<groupId>javax.websocket</groupId>
			<artifactId>javax.websocket-api</artifactId>
			<version>1.1</version>
			<scope>provided</scope>
		</dependency>

		<!-- ajax 406 에러 대응 json -->
		<dependency>
		    <groupId>org.codehaus.jackson</groupId>
		    <artifactId>jackson-mapper-asl</artifactId>
		    <version>1.9.13</version>
		</dependency>		
		<dependency>
	   		<groupId>org.jsoup</groupId>
	   		<artifactId>jsoup</artifactId>
			<version>1.11.3</version>		
		</dependency>
	</dependencies>
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <additionalProjectnatures>
                        <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                    </additionalProjectnatures>
                    <additionalBuildcommands>
                        <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
                    </additionalBuildcommands>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version><!-- 수정 -->
                <configuration>
                    <source>1.8</source> <!-- 수정 : 1.8은 자바 버전(자바 컴파일 버전)-->
                    <target>1.8</target> <!-- 수정 -->
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <configuration>
                    <mainClass>org.test.int1.Main</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
